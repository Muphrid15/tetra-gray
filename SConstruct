env = DefaultEnvironment(CXXFLAGS='--std=gnu++11',  CCFLAGS='-Wall', LIBPATH='/usr/local/cuda-7.5/targets/x86_64-linux/lib')
env.Tool('nvcc')
env.Append(NVCCFLAGS='-std=c++11 -arch=sm_30 -O3 --expt-extended-lambda')
env.Append(RPATH='/usr/local/cuda-7.5/targets/x86_64-linux/lib')
testobj = env.Object(target='test.o', source='test.cu')
flatobj = env.Object(target='flat.o', source='flat.cu')
kerrobj = env.Object(target='doran.o', source='doran.cu')
imageobj = env.Object(target='image.o', source='image.cu')
test = env.Program(target='test', source=['test.o'], LINK='g++', LIBS=['cudart'])
flat = env.Program(target='flat', source=['flat.o', 'image.o'], LINK='g++', LIBS=['cudart', 'png12'])
doran = env.Program(target='doran', source=['doran.o', 'image.o'], LINK='g++', LIBS=['cudart', 'png12'])
testoutput = env.Command(target="test.txt", source="./test", action = "./test | tee $TARGET")
Depends(testoutput, test)
AlwaysBuild(testoutput)
